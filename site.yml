---
# This playbook should deploy everything
- name: Site playbook
  hosts: all
  tags:
    - always
  tasks:
    - name: Ensure required variables have been defined
      ansible.builtin.assert:
        quiet: true
        fail_msg: Required variable has not been defined
        that:
          - maas_url is defined
          - maas_version is defined
          - maas_installation_type is defined
          - maas_postgres_password is defined

    - name: Ensure maas_version is a version string
      ansible.builtin.assert:
        fail_msg: "'{{ maas_version }}' is not a valid version number"
        that:
          - maas_version is regex('\d+\.\d+(\.\d+)?')

    - name: Define proxy environment if proxies given
      ansible.builtin.set_fact:
        proxy_env: "{{ proxy_env | combine({'http_proxy': http_proxy | d(omit)}) | combine({'https_proxy': https_proxy | d(omit)}) }}"

    - name: Show proxy environment if in use
      ansible.builtin.debug:
        msg: "Playbooks using proxy settings: {{ proxy_env }}"
      with_dict: "{{ proxy_env }}"

    - name: Ensure dist is up to date
      ansible.builtin.apt:
        upgrade: dist
        update_cache: true
        cache_valid_time: 3600
      become: true

    - name: Discover host architecture
      ansible.builtin.command: dpkg --print-architecture
      register: arch_out
      changed_when: false

    - name: Set architechture facts
      ansible.builtin.set_fact:
        ubuntu_arch: "{{ arch_out.stdout }}"

- name: Build postgres
  hosts: maas_postgres
  roles:
    - role: maas_postgres
  become: true
  gather_facts: true
  tags:
    - maas_postgres_primary
    - maas_postgres_secondary
    - maas_postgres
    - maas_ha_postgres
  environment: "{{ proxy_env }}"

- name: Build Corrosync
  hosts: maas_corosync
  roles:
    - role: maas_corosync
  become: true
  gather_facts: true
  tags:
    - maas_corosync
    - maas_ha_postgres
  environment: "{{ proxy_env }}"

- name: Build pacemakers
  hosts: maas_pacemaker
  roles:
    - role: maas_pacemaker
  become: true
  gather_facts: true
  tags:
    - maas_pacemaker
    - maas_ha_postgres
  environment: "{{ proxy_env }}"

- name: Build postgres proxies
  hosts: maas_postgres_proxy
  roles:
    - role: maas_postgres_proxy
  become: true
  gather_facts: true
  tags:
    - maas_postgres_proxy
  environment: "{{ proxy_env }}"

# proxies are provisioned prior to rack controllers so the rack controller
# will request to register to region controllers through the proxy
- name: Build MAAS proxies
  hosts: maas_proxy
  roles:
    - role: maas_proxy
  become: true
  gather_facts: true
  tags:
    - maas_proxy
  environment: "{{ proxy_env }}"

- name: Build region controllers
  hosts: maas_region_controller
  roles:
    - role: maas_region_controller
  become: true
  gather_facts: true
  tags:
    - maas_region_controller
    - maas_controller
  environment: "{{ proxy_env }}"

- name: Build rack controllers
  hosts: maas_rack_controller
  roles:
    - role: maas_rack_controller
  become: true
  gather_facts: true
  tags:
    - maas_rack_controller
    - maas_controller
  environment: "{{ proxy_env }}"

- name: Configure observability
  hosts: maas_rack_controller, maas_region_controller, maas_postgres
  become: true
  gather_facts: true
  tags:
    - maas_o11y
  environment: "{{ proxy_env }}"
  pre_tasks:
    - name: Ensure o11y can be enabled
      ansible.builtin.assert:
        quiet: true
        fail_msg: Prometheus or Loki endpoints must be defined
        that:
          - (o11y_prometheus_url|length > 0 or o11y_loki_url|length > 0)
      when: o11y_enable
  roles:
    - role: o11y_agent
