---
# Playbook to generate a MAAS region
- name: Verify MAAS Version supported on the host OS
  ansible.builtin.include_role:
    name: common
    tasks_from: maas_supported_os
  when: maas_installation_type | lower != 'snap'

- name: Check installed packages
  ansible.builtin.package_facts:
    manager: auto

- name: Check installed snaps
  ansible.builtin.shell:
    cmd: set -o pipefail && snap list | awk '{ print $1}'
  args:
    executable: /bin/bash
  register: snaps_installed
  changed_when: snaps_installed is success

- name: Determine MAAS installation status
  ansible.builtin.set_fact:
    maas_installed: >
      {{ true if ((maas_installation_type | lower == 'snap') and ('maas' in snaps_installed.stdout ))
        or ((maas_installation_type | lower == 'deb') and (maas_package_name in ansible_facts.packages)) else false }}

- name: Install MAAS Region
  ansible.builtin.include_tasks:
    file: install_maas.yaml
  when: (not maas_installed)

- name: Update MAAS Region
  ansible.builtin.include_tasks:
    file: update_maas.yaml
  when: (maas_installed)

- name: Get admin user API key
  ansible.builtin.command: maas apikey --username {{ admin_username }}
  register: maas_admin_api_key
  changed_when: maas_admin_api_key is success

- name: Login in MAAS
  ansible.builtin.shell:
    cmd: maas login {{ admin_username }} {{ maas_url }} {{ maas_admin_api_key.stdout }}
  environment:
    http_proxy: ""
    https_proxy: ""
    no_proxy: localhost,hostvars[inventory_hostname]['ansible_env'].SSH_CONNECTION.split(' ')[2]
  changed_when: login is success
  register: login
  until: login is not failed
  retries: 5
  delay: 2

- name: Setup o11y
  ansible.builtin.include_tasks:
    file: o11y.yaml
  when: o11y_enable

- name: Use MAAS Vault
  ansible.builtin.include_role:
    name: common
    tasks_from: vault
  # Vault requires MAAS 3.3 or greater
  when: vault_integration is defined and vault_integration and maas_version is version("3.3", '>=')

- name: Setup firewall
  ansible.builtin.include_role:
    name: maas_firewall
    tasks_from: setup_firewall_rules
  when: enable_firewall
